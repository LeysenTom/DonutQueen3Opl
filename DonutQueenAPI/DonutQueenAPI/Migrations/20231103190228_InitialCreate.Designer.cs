// <auto-generated />
using System;
using DonutQueenAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DonutQueenAPI.Migrations
{
    [DbContext(typeof(DonutQueenAPIContext))]
    [Migration("20231103190228_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DonutQueenAPI.Models.Donut", b =>
                {
                    b.Property<int>("DonutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DonutId"), 1L, 1);

                    b.Property<string>("Afbeelding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Glazuur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsVegan")
                        .HasColumnType("bit");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Omschrijving")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Topping")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vulling")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WinkelId")
                        .HasColumnType("int");

                    b.HasKey("DonutId");

                    b.ToTable("Donut", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
